# Generated by Django 2.0 on 2018-03-28 14:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Abbreviation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Project Name', max_length=200, unique=True)),
                ('abbreviation', models.CharField(help_text='Abbreviation', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Bug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bugID', models.IntegerField(help_text='bugID')),
                ('description', models.CharField(max_length=5000)),
                ('state', models.CharField(max_length=200)),
                ('priority', models.CharField(max_length=200)),
                ('severity', models.CharField(max_length=200)),
                ('test_Cases_Affected', models.IntegerField()),
                ('remove_Duplicate', models.CharField(max_length=5)),
                ('external_ID', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of project', max_length=200)),
                ('projectID', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Test_Classification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of Test-Plan', max_length=200, unique=True)),
                ('frequency', models.CharField(choices=[('Common', 'Common'), ('Uncommon', 'Uncommon'), ('Very Uncommon', 'Very Uncommon')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Test_Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Test Plan name', max_length=200)),
                ('platform', models.CharField(help_text='Test Plan Platform', max_length=200)),
                ('cycle', models.CharField(help_text='Cycle', max_length=200)),
                ('version', models.CharField(help_text='Version', max_length=2000)),
                ('state', models.CharField(help_text='State', max_length=200)),
                ('preview_state', models.CharField(help_text='Preview State', max_length=200)),
                ('assigned_total', models.IntegerField(help_text='assigned_total')),
                ('passed_total', models.IntegerField(help_text='passed_total')),
                ('not_executed_total', models.IntegerField(help_text='not_executed_total')),
                ('failed_total', models.IntegerField(help_text='failed_total')),
                ('blocked_total', models.IntegerField(help_text='blocked_total')),
                ('passed_total_pr', models.CharField(max_length=200)),
                ('not_executed_total_pr', models.CharField(max_length=200)),
                ('failed_total_pr', models.CharField(max_length=200)),
                ('blocked_total_pr', models.CharField(max_length=200)),
                ('assigned_manual', models.IntegerField(help_text='assigned_manual')),
                ('passed_manual', models.IntegerField(help_text='passed_manual')),
                ('not_executed_manual', models.IntegerField(help_text='not_executed_manual')),
                ('failed_manual', models.IntegerField(help_text='failed_manual')),
                ('blocked_manual', models.IntegerField(help_text='blocked_manual')),
                ('passed_manual_pr', models.CharField(max_length=200)),
                ('not_executed_manual_pr', models.CharField(max_length=200)),
                ('failed_manual_pr', models.CharField(max_length=200)),
                ('blocked_manual_pr', models.CharField(max_length=200)),
                ('assigned_automated', models.IntegerField(help_text='assigned_automated')),
                ('passed_automated', models.IntegerField(help_text='passed_automated')),
                ('not_executed_automated', models.IntegerField(help_text='not_executed_automated')),
                ('failed_automated', models.IntegerField(help_text='failed_automated')),
                ('blocked_automated', models.IntegerField(help_text='blocked_automated')),
                ('passed_automated_pr', models.CharField(max_length=200)),
                ('not_executed_automated_pr', models.CharField(max_length=200)),
                ('failed_automated_pr', models.CharField(max_length=200)),
                ('blocked_automated_pr', models.CharField(max_length=200)),
                ('number_of_bug_up_to_date', models.IntegerField(help_text='number_of_bug_up_to_date')),
                ('number_of_critical_bug_up_to_date', models.IntegerField(help_text='number_of_critical_bug_up_to_date')),
                ('number_of_major_bug_up_to_date', models.IntegerField(help_text='number_of_major_bug_up_to_date')),
                ('number_of_medium_bug_up_to_date', models.IntegerField(help_text='number_of_medium_bug_up_to_date')),
                ('number_of_minor_bug_up_to_date', models.IntegerField(help_text='number_of_minor_bug_up_to_date')),
                ('number_of_bug', models.IntegerField(help_text='number_of_bug')),
                ('number_of_critical_bug', models.IntegerField(help_text='number_of_critical')),
                ('number_of_major_bug', models.IntegerField(help_text='number_of_major_bug')),
                ('number_of_medium_bug', models.IntegerField(help_text='number_of_medium_bug')),
                ('number_of_minor_bug', models.IntegerField(help_text='number_of_minor_bug')),
                ('reviwed', models.BooleanField(default=False)),
                ('xdate', models.DateField()),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='generator.Project')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the Topic', max_length=200, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='test_classification',
            name='topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='generator.Topic'),
        ),
        migrations.AddField(
            model_name='bug',
            name='test_plan',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='generator.Test_Plan'),
        ),
    ]
